---
title: "Class 5: Data Vis with ggplot"
author: "Farnam Tavakoli (A17628539)"
format: pdf
---

# Graphics system in R

There are many graphics systems in R for making plots and figures.

we have already played a little with **"base R"is ** graphics and the `plot()` function.

Today we will start learning about a popular graphics package called `ggplot2()`.

This is an add on package - i.e. we need to install it. I install it (like I install any package) with the `install.packages()` function.

```{r}
plot(cars)
```


Before I can use the functions from a package I have to load up the package from my "library". We use the `library(ggplot2)` command to load it up. 
```{r}
library(ggplot2)
ggplot(cars)
```


Every ggplot is made of at least 3 things:
- data (the number etc. that will go into your plot)
- aesthetics (how the columns of data map to the plot aesthetics)
- geoms (how the plot actually looks, points, bars, lines etc.)


```{r}
ggplot(cars) + aes(x=speed, y=dist) + geom_point()
```



for simple plots ggplot is more verbose - it takes more code than base R plot.


add some more layers to our ggplot:
```{r}
ggplot(cars) + 
  aes(x=speed, y=dist) + 
  geom_point() + 
  geom_smooth(method="lm") + 
  labs(title="stopping distance of old cars", 
       subtitle = "A silly example plot") + 
  theme_bw()

```

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```


Q. Use the nrow() function to find out how many genes are in this dataset. What is your answer?
```{r}
nrow(genes)
```

Q. Use the colnames() function and the ncol() function on the genes data frame to find out what the column names are (we will need these later) and how many columns there are. How many columns did you find? 

```{r}
colnames(genes)
```
```{r}
ncol(genes)
```

Q. Use the table() function on the State column of this data.frame to find out how many ‘up’ regulated genes there are. What is your answer?

```{r}
table(genes$State)
```

Using your values above and 2 significant figures. What fraction of total genes is up-regulated in this dataset?

```{r}
table(genes$State) / nrow(genes)
```

```{r}
round(table(genes$State) / nrow(genes)*100, 2)
```

```{r}
ggplot(genes) + 
    aes(x=Condition1, y= Condition2, col=State)+
  geom_point()
```



```{r}
# File location online
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"

gapminder <- read.delim(url)
```


```{r}
# install.packages("dplyr")  ## un-comment to install if needed
library(dplyr)

gapminder_2007 <- gapminder %>% filter(year==2007)
```


Q. Complete the code below to produce a first basic scater plot of this gapminder_2007 dataset:

```{r}
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp) +
  geom_point()
```

```{r}
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp) +
  geom_point(alpha=0.5)
```





